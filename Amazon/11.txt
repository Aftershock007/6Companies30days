Leetcode- 297

class Codec {
public:

    // Encodes a tree to a single string.
    void dfs(TreeNode *root,string &s){
        if(!root){
            s.push_back('*');
            return;
        }
        s.append(to_string(root->val)+',');
        dfs(root->left,s);
        dfs(root->right,s);
    }
    string serialize(TreeNode* root) {
        ios_base::sync_with_stdio(false); 
        cin.tie(NULL);

        string s="";
        dfs(root,s);
        return s;
    }

    // Decodes your encoded data to tree.
    TreeNode *decode(string &data){
        if(data.size()==0) return nullptr;
        if(data[0]=='*'){
            data=data.substr(1);
            return nullptr;
        }
        int pos=0;
        string no;
        while(data[pos]!=',')
            no+=data[pos++];
        TreeNode *curr=new TreeNode(stoi(no));
        data=data.substr(pos+1);
        curr->left=decode(data);
        curr->right=decode(data);
        return curr;
    }
    TreeNode* deserialize(string data) {
        ios_base::sync_with_stdio(false); 
        cin.tie(NULL);
        
        if(data.size()<=1) return nullptr;
        return decode(data);
    }
};