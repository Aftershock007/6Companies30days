Leetcode- 994

class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        if(grid.empty()) return 0;
        int m=grid.size(),n=grid[0].size(),count=0,total=0,day=0;
        queue<pair<int,int>> rotten;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]!=0)
                    total++;
                if(grid[i][j]==2) 
                    rotten.push({i,j});
            }
        }
        int dx[4]={1,0,-1,0};
        int dy[4]={0,1,0,-1};
        while(!rotten.empty()){
            int k=rotten.size();
            count+=k;
            while(k--){
                int x=rotten.front().first,y=rotten.front().second;
                rotten.pop();
                for(int i=0;i<4;i++){
                    int nx=x+dx[i];
                    int ny=y+dy[i];
                    if(nx<0||ny<0||nx>=m||ny>=n||grid[nx][ny]!=1) continue;
                    grid[nx][ny]=2;
                    rotten.push({nx,ny});
                }
            }
            if(!rotten.empty()) day++;
        }
        return count==total?day:-1;
    }
};